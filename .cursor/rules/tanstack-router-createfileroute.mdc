---
description: 
globs: src/routes/**/*.tsx
alwaysApply: false
---
# TanStack Router: Do NOT Import createFileRoute

When working with TanStack Router route files in the [src/routes](mdc:src/routes) directory, **NEVER** import the `createFileRoute` function.

## Why This Rule Exists

The `createFileRoute` function is automatically made available in each route file through TypeScript module declarations in [src/routeTree.gen.ts](mdc:src/routeTree.gen.ts). This file contains module augmentation that declares `createFileRoute` for each specific route:

```typescript
declare module './routes/index' {
  const createFileRoute: CreateFileRoute<...>
}
declare module './routes/basic' {
  const createFileRoute: CreateFileRoute<...>
}
// ... and so on for each route
```

## Correct Usage

✅ **DO THIS** - Use `createFileRoute` directly without importing:
```tsx
// src/routes/example.tsx
export const Route = createFileRoute({
  component: RouteComponent,
});

function RouteComponent() {
  // component logic
}
```

❌ **DON'T DO THIS** - Never import createFileRoute:
```tsx
// src/routes/example.tsx
import { createFileRoute } from '@tanstack/react-router' // ❌ WRONG!

export const Route = createFileRoute({
  component: RouteComponent,
});
```

## Key Points

- `createFileRoute` is globally available in route files through module declarations
- Each route file gets its own typed version of `createFileRoute` with proper type safety
- Importing it manually will cause TypeScript conflicts and is unnecessary
- This pattern is automatically maintained by TanStack Router's code generation

