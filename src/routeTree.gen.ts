/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SuspenceImport } from './routes/suspence'
import { Route as SearchDebouncingImport } from './routes/search-debouncing'
import { Route as PreloadingImport } from './routes/preloading'
import { Route as PaginationImport } from './routes/pagination'
import { Route as IntentPreloadingImport } from './routes/intent-preloading'
import { Route as BasicImport } from './routes/basic'
import { Route as IndexImport } from './routes/index'
import { Route as DemoTanstackQueryImport } from './routes/demo.tanstack-query'

// Create/Update Routes

const SuspenceRoute = SuspenceImport.update({
  id: '/suspence',
  path: '/suspence',
  getParentRoute: () => rootRoute,
} as any)

const SearchDebouncingRoute = SearchDebouncingImport.update({
  id: '/search-debouncing',
  path: '/search-debouncing',
  getParentRoute: () => rootRoute,
} as any)

const PreloadingRoute = PreloadingImport.update({
  id: '/preloading',
  path: '/preloading',
  getParentRoute: () => rootRoute,
} as any)

const PaginationRoute = PaginationImport.update({
  id: '/pagination',
  path: '/pagination',
  getParentRoute: () => rootRoute,
} as any)

const IntentPreloadingRoute = IntentPreloadingImport.update({
  id: '/intent-preloading',
  path: '/intent-preloading',
  getParentRoute: () => rootRoute,
} as any)

const BasicRoute = BasicImport.update({
  id: '/basic',
  path: '/basic',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/basic': {
      id: '/basic'
      path: '/basic'
      fullPath: '/basic'
      preLoaderRoute: typeof BasicImport
      parentRoute: typeof rootRoute
    }
    '/intent-preloading': {
      id: '/intent-preloading'
      path: '/intent-preloading'
      fullPath: '/intent-preloading'
      preLoaderRoute: typeof IntentPreloadingImport
      parentRoute: typeof rootRoute
    }
    '/pagination': {
      id: '/pagination'
      path: '/pagination'
      fullPath: '/pagination'
      preLoaderRoute: typeof PaginationImport
      parentRoute: typeof rootRoute
    }
    '/preloading': {
      id: '/preloading'
      path: '/preloading'
      fullPath: '/preloading'
      preLoaderRoute: typeof PreloadingImport
      parentRoute: typeof rootRoute
    }
    '/search-debouncing': {
      id: '/search-debouncing'
      path: '/search-debouncing'
      fullPath: '/search-debouncing'
      preLoaderRoute: typeof SearchDebouncingImport
      parentRoute: typeof rootRoute
    }
    '/suspence': {
      id: '/suspence'
      path: '/suspence'
      fullPath: '/suspence'
      preLoaderRoute: typeof SuspenceImport
      parentRoute: typeof rootRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/basic': typeof BasicRoute
  '/intent-preloading': typeof IntentPreloadingRoute
  '/pagination': typeof PaginationRoute
  '/preloading': typeof PreloadingRoute
  '/search-debouncing': typeof SearchDebouncingRoute
  '/suspence': typeof SuspenceRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/basic': typeof BasicRoute
  '/intent-preloading': typeof IntentPreloadingRoute
  '/pagination': typeof PaginationRoute
  '/preloading': typeof PreloadingRoute
  '/search-debouncing': typeof SearchDebouncingRoute
  '/suspence': typeof SuspenceRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/basic': typeof BasicRoute
  '/intent-preloading': typeof IntentPreloadingRoute
  '/pagination': typeof PaginationRoute
  '/preloading': typeof PreloadingRoute
  '/search-debouncing': typeof SearchDebouncingRoute
  '/suspence': typeof SuspenceRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/basic'
    | '/intent-preloading'
    | '/pagination'
    | '/preloading'
    | '/search-debouncing'
    | '/suspence'
    | '/demo/tanstack-query'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/basic'
    | '/intent-preloading'
    | '/pagination'
    | '/preloading'
    | '/search-debouncing'
    | '/suspence'
    | '/demo/tanstack-query'
  id:
    | '__root__'
    | '/'
    | '/basic'
    | '/intent-preloading'
    | '/pagination'
    | '/preloading'
    | '/search-debouncing'
    | '/suspence'
    | '/demo/tanstack-query'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BasicRoute: typeof BasicRoute
  IntentPreloadingRoute: typeof IntentPreloadingRoute
  PaginationRoute: typeof PaginationRoute
  PreloadingRoute: typeof PreloadingRoute
  SearchDebouncingRoute: typeof SearchDebouncingRoute
  SuspenceRoute: typeof SuspenceRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BasicRoute: BasicRoute,
  IntentPreloadingRoute: IntentPreloadingRoute,
  PaginationRoute: PaginationRoute,
  PreloadingRoute: PreloadingRoute,
  SearchDebouncingRoute: SearchDebouncingRoute,
  SuspenceRoute: SuspenceRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/basic",
        "/intent-preloading",
        "/pagination",
        "/preloading",
        "/search-debouncing",
        "/suspence",
        "/demo/tanstack-query"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/basic": {
      "filePath": "basic.tsx"
    },
    "/intent-preloading": {
      "filePath": "intent-preloading.tsx"
    },
    "/pagination": {
      "filePath": "pagination.tsx"
    },
    "/preloading": {
      "filePath": "preloading.tsx"
    },
    "/search-debouncing": {
      "filePath": "search-debouncing.tsx"
    },
    "/suspence": {
      "filePath": "suspence.tsx"
    },
    "/demo/tanstack-query": {
      "filePath": "demo.tanstack-query.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
